describe("uiJq",function(){var e,t,n;e=null,beforeEach(module("ui.jq")),beforeEach(function(){jQuery.fn.foo=function(){},module(function(e){e.value("ui.config",{jq:{foo:{}}})})}),beforeEach(inject(function(r,i,s){e=r.$new(),t=i,n=s})),describe("function or plugin isn't found",function(){it("should throw an error",function(){expect(function(){t('<div ui-jq="failure"></div>')(e)}).toThrow()})}),describe("calling a jQuery element function",function(){it("should just like, sort of work and junk",function(){spyOn(jQuery.fn,"foo"),t('<div ui-jq="foo"></div>')(e),n.flush(),expect(jQuery.fn.foo).toHaveBeenCalled()}),it("should fire after the view has rendered",function(){var r;jQuery.fn.bar=function(){r=angular.element(this).children().length},e.$apply("items=[1, 2]"),t('<ul ui-jq="bar"><li ng-repeat="item in items"></li></ul>')(e),e.$apply(),n.flush(),expect(r).toBe(2)})}),describe("calling a jQuery element function with options",function(){it("should not copy options.pizza to global",function(){spyOn(jQuery.fn,"foo"),t('<div ui-jq="foo" ui-options="{pizza:true}"></div><div ui-jq="foo" ui-options="{}"></div>')(e),n.flush(),expect(jQuery.fn.foo.calls[0].args).toEqual([{pizza:!0}]),expect(jQuery.fn.foo.calls[1].args).toEqual([{}])})}),describe("using ui-refresh",function(){it("should execute exactly once if the expression is never set",function(){spyOn(jQuery.fn,"foo"),t('<div ui-jq="foo" ui-refresh="bar"></div>')(e),n.flush(),expect(jQuery.fn.foo.callCount).toBe(1)}),it("should execute exactly once if the expression is set at initialization",function(){spyOn(jQuery.fn,"foo"),e.$apply("bar = true"),t('<div ui-jq="foo" ui-refresh="bar"></div>')(e),n.flush(),expect(jQuery.fn.foo.callCount).toBe(1)}),it("should execute once for each time the expression changes",function(){spyOn(jQuery.fn,"foo"),e.$apply("bar = 1"),t('<div ui-jq="foo" ui-refresh="bar"></div>')(e),n.flush(),expect(jQuery.fn.foo.callCount).toBe(1),e.$apply("bar = bar+1"),n.flush(),expect(jQuery.fn.foo.callCount).toBe(2),e.$apply("bar = bar+1"),n.flush(),expect(jQuery.fn.foo.callCount).toBe(3)})}),describe("change events",function(){it("should trigger an `input` event",function(){var n=!1,r=t('<input ui-jq="foo" ng-model="foobar">')(e);r.bind("input",function(){n=!0}),r.trigger("change"),expect(n).toBe(!0)}),it("should ignore controls without ngModel attribute",function(){var n=!1,r=t('<input ui-jq="foo">')(e);r.bind("input",function(){n=!0}),r.trigger("change"),expect(n).toBe(!1)}),it("should ignore non-form controls",function(){var n=!1,r=t('<div ui-jq="foo"></div  ng-model="foobar">')(e);r.bind("input",function(){n=!0}),r.trigger("change"),expect(n).toBe(!1)})})});