angular.module("ui.validate",[]).directive("uiValidate",function(){return{restrict:"A",require:"ngModel",link:function(e,t,n,r){function u(t){if(angular.isString(t)){e.$watch(t,function(){angular.forEach(s,function(e){e(r.$modelValue)})});return}if(angular.isArray(t)){angular.forEach(t,function(t){e.$watch(t,function(){angular.forEach(s,function(e){e(r.$modelValue)})})});return}angular.isObject(t)&&angular.forEach(t,function(t,n){angular.isString(t)&&e.$watch(t,function(){s[n](r.$modelValue)}),angular.isArray(t)&&angular.forEach(t,function(t){e.$watch(t,function(){s[n](r.$modelValue)})})})}var i,s={},o=e.$eval(n.uiValidate);if(!o)return;angular.isString(o)&&(o={validator:o}),angular.forEach(o,function(t,n){i=function(i){var s=e.$eval(t,{$value:i});return angular.isObject(s)&&angular.isFunction(s.then)?(s.then(function(){r.$setValidity(n,!0)},function(){r.$setValidity(n,!1)}),i):s?(r.$setValidity(n,!0),i):(r.$setValidity(n,!1),i)},s[n]=i,r.$formatters.push(i),r.$parsers.push(i)}),n.uiValidateWatch&&u(e.$eval(n.uiValidateWatch))}}});