describe("uiRoute",function(){function r(t){n.path(t),e.$broadcast("$routeChangeSuccess"),e.$apply()}function i(n){function i(r){var i=$(r);return n&&i.attr("ng-model",n),t(i[0])(e)}var s=n||"$uiRoute";describe("with uiRoute defined",function(){it("should use the uiRoute property",function(){i('<div ui-route="/foo">')}),it("should update model on $observe",function(){r("/bar"),e.$apply('foobar = "foo"'),i('<div ui-route="/{{foobar}}">'),expect(e[s]).toBeFalsy(),e.$apply('foobar = "bar"'),expect(e[s]).toBe(!0),e.$apply('foobar = "foo"'),expect(e[s]).toBe(!1)}),it("should support regular expression",function(){r("/foo/123"),i('<div ui-route="/foo/[0-9]*">'),expect(e[s]).toBe(!0)})}),describe("with ngHref defined",function(){it("should use the ngHref property",function(){r("/foo"),i('<a ng-href="/foo" ui-route>'),expect(e[s]).toBe(!0)}),it("should update model on $observe",function(){r("/bar"),e.$apply('foobar = "foo"'),i('<a ng-href="/{{foobar}}" ui-route>'),expect(e[s]).toBeFalsy(),e.$apply('foobar = "bar"'),expect(e[s]).toBe(!0),e.$apply('foobar = "foo"'),expect(e[s]).toBe(!1)})}),describe("with href defined",function(){it("should use the href property",function(){r("/foo"),i('<a href="/foo" ui-route>'),expect(e[s]).toBe(!0)})}),it("should throw an error if no route property available",function(){expect(function(){i("<div ui-route>")}).toThrow()}),it("should update model on route change",function(){r("/bar"),i('<div ui-route="/foo">'),expect(e[s]).toBeFalsy(),r("/foo"),expect(e[s]).toBe(!0),r("/bar"),expect(e[s]).toBe(!1)})}var e,t,n;beforeEach(module("ui.directives")),beforeEach(inject(function(r,i,s,o){e=r.$new(),t=i,n=o})),describe("model is null",function(){i()}),describe("model is set",function(){i("pizza")})});